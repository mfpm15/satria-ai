[tool.poetry]
name = "satria-ai"
version = "0.1.0"
description = "Smart Autonomous Threat Response & Intelligence Agent - AI Cybersecurity System"
authors = ["SATRIA AI Team"]
readme = "README.md"
packages = [{include = "satria", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
asyncio = "^3.4.3"
kafka-python = "^2.0.2"
redis = "^5.0.1"
neo4j = "^5.14.1"
psycopg2-binary = "^2.9.9"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
influxdb-client = "^1.39.0"
chromadb = "^0.4.18"
langchain = "^0.0.348"
sentence-transformers = "^2.2.2"
scikit-learn = "^1.3.2"
xgboost = "^2.0.2"
numpy = "^1.25.2"
pandas = "^2.1.3"
pyjwt = "^2.8.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
bcrypt = "^4.1.2"
python-multipart = "^0.0.6"
aiofiles = "^23.2.1"
httpx = "^0.25.2"
prometheus-client = "^0.19.0"
structlog = "^23.2.0"
typer = "^0.9.0"
rich = "^13.7.0"
ollama = "^0.1.7"
openai = "^1.3.0"
pydantic-settings = "^2.10.1"
websockets = "^12.0"
psutil = "^5.9.0"
jinja2 = "^3.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
bandit = "^1.7.5"
safety = "^2.3.5"
types-requests = "^2.31.0"

[tool.poetry.scripts]
satria = "satria.cli:app"

[tool.ruff]
target-version = "py311"
line-length = 120
select = ["E", "W", "F", "I", "N", "UP", "B", "SIM", "PL"]
ignore = ["E501", "PLR0913", "PLR0912", "PLR0915"]

[tool.ruff.per-file-ignores]
"tests/*" = ["PLR2004"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

